# Build and upload artifacts

name: Build

on:
  push:
    branches:
      - master

  #schedule:
  #  - cron: '0 0 1 * *' # at 00:00 on the first day of the month

  workflow_dispatch:
    inputs:
      enable_build_hackypi:
        type: boolean
        description: 'Build HackyPi and HackyPackages Server'
        default: true
      enable_build_tools:
        type: boolean
        description: 'Build additional Tools'
        default: true
      hackypi_build_runner:
        type: string
        description: 'Runner to use to build HackyPi'
        default: self-hosted

  pull_request:
    branches:
      - master

jobs:
  build-hackypi:
    if: ${{ github.event.inputs.enable_build_hackypi == 'true' || github.event.inputs.enable_build_hackypi == ''}}
    runs-on: ${{ github.event.inputs.hackypi_build_runner || 'self-hosted' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          clean: false

      - name: Cache Bitbake Output
        if: ${{ github.event.inputs.hackypi_build_runner != 'self-hosted' }}
        id: cache-bitbake
        uses: actions/cache@v3
        with:
          path: build/downloads
          key: ${{ runner.os }}-bitbake-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-bitbake-

      - name: Setup Environment
        shell: bash
        run: |
          bash setup.sh

      - name: Bitbake HackyPi Image - Raspberry Pi 4
        shell: bash
        run: |
          source poky/oe-init-build-env &>/dev/null
          bitbake hackypi-image

      - name: Bitbake HackyPi Image - Raspberry Pi 3
        shell: bash
        run: |
          source poky/oe-init-build-env &>/dev/null
          MACHINE=raspberrypi3 bitbake hackypi-image

      - name: Upload Artifacts
        if: ${{ github.event.inputs.hackypi_build_runner != 'self-hosted' }}
        uses: actions/upload-artifact@v3.1.0
        with:
          name: security-challenge-package
          path: |
            build/tmp/deploy/images/raspberrypi4/hackypi-image-raspberrypi4-*.rpi-sdimg
            build/tmp/deploy/images/raspberrypi3/hackypi-image-raspberrypi3-*.rpi-sdimg
            build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-dbg*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-src*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-doc*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-dev*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-ptest*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-syslog*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-staticdev*.ipk
  
  build-challenges:
    if: ${{ github.event.inputs.enable_build_hackypi == 'true' || github.event.inputs.enable_build_hackypi == ''}}
    runs-on: ${{ github.event.inputs.hackypi_build_runner || 'ubuntu-22.04' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache Bitbake Output
        id: cache-bitbake
        uses: actions/cache@v3
        with:
          path: build/downloads
          key: ${{ runner.os }}-bitbake-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-bitbake-

      - name: Setup Environment
        shell: bash
        run: |
          bash setup.sh

      - name: Bitbake HackyPi Challenges
        shell: bash
        run: |
          source poky/oe-init-build-env &>/dev/null
          bitbake chatty-charly
          bitbake relaxed-rachel
          bitbake deceived-donald
          bitbake moody-maggie

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3.1.0
        with:
          name: security-challenge-package
          path: |
            build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-dbg*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-src*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-doc*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-dev*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-ptest*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-syslog*.ipk
            !build/tmp/deploy/ipk/cortexa7t2hf-neon-vfpv4/*-staticdev*.ipk
            
  build-tools:
    if: ${{ (github.event.inputs.enable_build_tools == 'true' || github.event.inputs.enable_build_tools == '') && github.event.inputs.hackypi_build_runner != 'self-hosted' }}
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build Relaxed-Rachel FTP Client
        shell: bash
        run: |
          cd tools/relaxed-rachel
          make all

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3.1.0
        with:
          name: security-challenge-package
          path: |
            tools/relaxed-rachel/build/
    
  build-hackypackages-server:
    if: ${{ github.event.inputs.hackypi_build_runner != 'self-hosted' }}
    runs-on: ubuntu-22.04
    needs: [ build-hackypi, build-challenges ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: security-challenge-package
          path: tools/opkg-server/src
          
      - name: Log in to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: tools/opkg-server/src
          push: true
          tags: ghcr.io/nimarty/hackypackages-server:dev
          build-args: PACKAGE_DIR=./ipk/cortexa7t2hf-neon-vfpv4

